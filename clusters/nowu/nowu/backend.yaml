apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nowu
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
          name: http-web-svc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nowu
  labels:
    app: nginx
    service: nginx
spec:
  ports:
  - name: ngx-svc-port
    protocol: TCP
    port: 8080
    targetPort: http-web-svc
  selector:
    app: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nowu
  annotations:
    kubernetes.io/ingress.class: nginx
  name: nginx-ingress
spec:
  rules:
  - host: nginx.alpha.now-u.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 8080
# ---
# apiVersion: gateway.networking.k8s.io/v1beta1
# kind: HTTPRoute
# metadata:
#   name: http
#   namespace: nowu
# spec:
#   parentRefs:
#   - name: gateway
#     namespace: istio-ingress
#   hostnames: ["alpha.now-u.com"]
#   rules:
#   - matches:
#     - path:
#         type: PathPrefix
#         value: /
#     backendRefs:
#     - name: nginx
#       port: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-gateway
  namespace: nowu
spec:
  # The selector matches the ingress gateway pod labels.
  # If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"
  selector:
    istio: istio=ingress
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "istio.alpha.now-u.com"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: istio-nginx-vs
  namespace: nowu
spec:
  hosts:
  - "istio.alpha.now-u.com"
  gateways:
  - istio-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 8080
        host: nginx
